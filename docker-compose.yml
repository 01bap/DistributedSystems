# version: '1.0'

services:

  # api:
  #   image: ghcr.io/professornova/distributed-systems:latest
  #   container_name: shopping_api
  #   depends_on:
  #     - db
  #   environment:
  #     ASPNETCORE_URLS: "http://+:3004"
  #     POSTGRES_CONNECTION: "Host=db;Port=5432;Database=shoppingdb;Username=postgres;Password=postgres"
  #     ASPNETCORE_ENVIRONMENT: Production
  #   ports:
  #     - "3004:3004"
  #   networks:
  #     - data-net
  #     - app-net

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    # environment:
    #   PUBLIC_BACKEND_URL: "http://url:8080"
    ports:
      - 3001:3000
    networks:
      - app-net
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - db
    ports:
      - 8080:8080
    networks:
      - app-net
      - data-net
    restart: unless-stopped

  db:
    container_name: postgres
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shoppingdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - data-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:

networks:
  app-net:
  data-net: